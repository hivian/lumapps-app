{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww16940\viewh11460\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Projet r\'e9alis\'e9 en 5h.\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
Architecture MVVM Android standard\
- 3 couches: UI, Presentation, Business\
- 1 couche Common pour tout ce qui est mutualisable ou g\'e9n\'e9rique.\
\
Android Jetpack: \
 - Databinding\
 - Navigation Component\
 - Room\
 - LiveData\
\
Biblioth\'e8ques externes:\
- Retrofit pour les appels r\'e9seaux\
- CircleImageView: librairie open source pour afficher une image dans un cercle.\
- Timberkt pour les logs\
- Glide pour charger les urls des images\
\
 Si j\'92avais pu y passer beaucoup de temps:\
 - J\'92aurais fait une gestion d\'92erreur plus pr\'e9cise + affichage des erreurs\
 - J\'92aurais cr\'e9e un service pour la navigation plut\'f4t que de la r\'e9aliser dans les fragments, car la logique de navigation n\'92a rien \'e0 faire dans l\'92UI.\
 - J\'92aurais fait une vrai architecture MVVM, pas celle de Google\'85, avec de la composition de View Model. Notamment dans la liste chaque cellule devrait avoir\
son propre View Model plut\'f4t que d\'92utiliser celui du fragment principal.\
- J\'92aurais ajout\'e9 un syst\'e8me de paging avec un \'ab\'a0load more\'a0\'bb quand on arrive en bas de la liste de mani\'e8re \'e0 charger plus d\'92\'e9l\'e9ments.}